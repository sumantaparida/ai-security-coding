import { validateBasis } from "@angular/flex-layout";

export const metaData = { LobTitle: 'MOTOR INSURANCE', 
    helpMessage: 'Motor Insurance is mandatory as per law and you must get vehicle insurance in order to use your vehicle on roads.', 
    helpImg: '../../../assets/images/Car_Insurance_ICON_og.svg',
    quotePayload:{
            lob: 'Motor',
            productType: '',
            coverType: '',
            policyType: 'RO',
            makeAndModel: '',
            fuelType:'',
            variantId: '',
            variantName: '',
            rtoCode: '',
            vehRegNo: '',
            yom: '',
            dateOfRegistration: '',
            minIdv: true,
            customerId: {predefinedValue:'customerId'},
            prevClaim: '',
            prevNCB: '',
            prevPolicyEndDate:'',
    },
  quoteSubmitUrl:'/api/v1/quote/submitMotorQuote',
  sections:[
    {
    sectionName:'Registration information',
    sectionIndex:0,
    isSectionDependent:false,
    sectionVisibleControlAndValue:[],
    isSectionVisible:true,
    formData:[
        {
        question:'Select Product Type',
        label:'Product Type',
        controlType:'select',
        controlName:'productType',
        isDependent:false,
        hasDependents: false,
        dependentType:[],
        sectionDependentConditions:[{}],
        formDependentConditions:[{}],
        payloadTag:'productType',
        validators:{required:true},
        defaultValue:'',
        key:'quoteInput',
        isFormVisible:true,
        options:[   {id: "TW",
        value: "Two Wheeler"
    },
    {
        id: "FW",
        value: "Private Car"
    }],
        callMaster:true,
        masterCallIsDependent:false,
        masterUrl:'/api/v1/master/getMasters/MotorProductType',
    },
    {
        question:'Do you Know the Vehicle Registration Number?',
        label:'',
        controlType:'radio',
        controlName:'regAvail',
        isDependent:false,
        hasDependents:true,
        dependentType:['form','section'],
        sectionDependentConditions:[{sectionIndex:[1],changeType:'visibility',changeDependsOnVal:['No']}],
        formDependentConditions:[{formDependentControls:['vehRegNo'],changeType:'visibility',changeDependsOnVal:['Yes']}],
        payloadTag:'regAvail',
        validators:{required:true},
        defaultValue:'',
        key:'quoteInput',
        isFormVisible:true,
        options:[{id:'Yes',value:'Yes'},{id:'No',value:'No'}],
        callMaster:false,
        masterCallIsDependent:false,
        masterUrl:'',
    },
    {
        question:'Please enter the Vehicle Registartion Number',
        label:'Vehicle Registartion No',
        controlType:'fetch',
        controlName:'vehRegNo',
        fetchButtonName:'Fetch Details',
        isDependent:true,
        hasDependents:true,
        dependentType:['form','section'],
        sectionDependentConditions:[{sectionIndex:[2],changeType:'visibility',changeDependsOnVal:[true]}],
        formDependentConditions:[{formDependentControls:['dateOfRegistration'],changeType:'visibility',changeDependsOnVal:[true]}],
        payloadTag:'vehRegNo',
        validators:{required:true},
        defaultValue:'',
        key:'quoteInput',
        isFormVisible:false,
        options:[],
        callMaster:false,
        masterCallIsDependent:false,
        masterUrl:'',
        fetchUrl:'/getVehicleDetails',
    },
    {
            question:'What is the vehicle Registration Date',
            label:'Registration Date',
            controlType:'date',
            controlName:'dateOfRegistration',
            isDependent:true,
            hasDependents: false,
            initiallyDisabled:false,
            dependentType:[],
            sectionDependentConditions:[{}],
            formDependentConditions:[{}],
            payloadTag:'dateOfRegistration',
            validators:{required:true},
            defaultValue:'',
            key:'quoteInput',
            max:'275 days',
            isFormVisible:false,
            options:[{}],
            callMaster:false,
            masterCallIsDependent:false,
            masterUrl:'',
            hasControlReset:true,
            controlToReset:['yom']
        },
]
  },
  {
    sectionName:'Registration Details',
    sectionIndex:1,
    isSectionVisible:false,
    isSectionDependent:true,
    formData:[
    {
        question:'Registration Location',
        label:'Eg. MH01 Mumbai',
        controlType:'searchableDropdown',
        controlName:'rtoCode',
        isDependent:false,
        hasDependents:true,
        dependentType:['form'],
        sectionDependentConditions:[{}],
        formDependentConditions:[{formDependentControls:['newVehicle'],changeType:'visibility',changeDependsOnVal:[]}],
        payloadTag:'rtoCode',
        validators:{required:true},
        defaultValue:'',
        key:'quoteInput',
        isFormVisible:false,
        options:[{id:'KA-03',value:'KA-03'}],
        filteredOptions:[],
        callMaster:true,
        masterCallIsDependent:false,
        masterUrl:'/api/v1/master/getAllRtos',
    },
    {
        question:'New vehicle',
        label:'',
        controlType:'radio',
        controlName:'newVehicle',
        isDependent:true,
        hasDependents:true,
        dependentType:['form','section'],
        sectionDependentConditions:[{sectionIndex:[3],changeType:'visibility',changeDependsOnVal:['NB']}],
        formDependentConditions:[{formDependentControls:['dateOfRegistration'],changeType:'visibility',changeDependsOnVal:['RO']}],
        payloadTag:'policyType',
        validators:{required:true},
        defaultValue:'',
        key:'quoteInput',
        isFormVisible:false,
        options:[{id:'NB',value:'Yes'},{id:'RO',value:'No'}],
        searchUrl:'',
        fetchCallDependentControlValue:[],
    },
    {
        question:'What is the vehicle Registration Date',
        label:'Registration Date',
        controlType:'date',
        controlName:'dateOfRegistration',
        isDependent:true,
        hasDependents: true,
        dependentType:['section'],
        sectionDependentConditions:[{sectionIndex:[2],changeType:'visibility',changeDependsOnVal:[]}],
        formDependentConditions:[{}],
        payloadTag:'dateOfRegistration',
        validators:{required:true},
        defaultValue:'',
        max:'275 days',
        key:'quoteInput',
        isFormVisible:false,
        options:[],
        callMaster:false,
        masterCallIsDependent:false,
        masterUrl:'',
        hasControlReset:true,
        controlToReset:['yom']
    }
]
  },
  {
    sectionName:'Vehicle Details',
    sectionIndex:2,
    isSectionVisible:false,
    isSectionDependent:true,
    formData:[
    {
        question:'Select vehicle modal',
        label:'Vehicle Modal',
        controlType:'searchableDropdownFromAPI',
        controlName:'makeAndModel',
        isDependent:false,
        hasDependents:true,
        dependentType:['form'],
        sectionDependentConditions:[{}],
        formDependentConditions:[{formDependentControls:['variantId'],changeType:'visibility',changeDependsOnVal:[]}],
        payloadTag:'makeAndModel',
        validators:{required:true},
        defaultValue:'',
        key:'quoteInput',
        isFormVisible:false,
        options:[],
        searchUrl:'/api/v1/master/findVehicleMakeAndModel',
        fetchCallDependentControlValue:['productType'],
        hasControlReset:true,
        controlToReset:['variantId']
    },
    {
        question:'Select Variant',
        label:'Vehicle Variant',
        controlType:'select',
        controlName:'variantId',
        isDependent:true,
        hasDependents: true,
        dependentType:['form'],
        sectionDependentConditions:[{}],
        formDependentConditions:[{formDependentControls:['fuelType'],changeType:'visibility',changeDependsOnVal:[]}],
        payloadTag:'variantId',
        additionalPayload:[{payloadTag:'variantName',optionValueTag:'value'}],
        validators:{required:true},
        defaultValue:'',
        key:'quoteInput',
        isFormVisible:false,
        options:[],
        callMaster:true,
        masterCallIsDependent:true,
        masterUrl:'/api/v1/master/findVehicleVariant',
        callType:'post',
        masterCallDependentControlValue:['productType','makeAndModel'],
    },
    {
        question:'Fuel Type',
        label:'Fuel Type',
        controlType:'text',
        initiallyDisabled:true,
        controlName:'fuelType',
        isDependent:true,
        hasDependents: true,
        dependentType:['form'],
        sectionDependentConditions:[{}],
        formDependentConditions:[{formDependentControls:['yom'],changeType:'visibility',changeDependsOnVal:[]}],
        payloadTag:'fuelType',
        validators:{required:true},
        defaultValue:true,
        defaultValueDependency:{condition:'selectFromFormOption',control:'variantId',value:'fuel'},
        key:'quoteInput',
        isFormVisible:false,
        options:[],
        callMaster:false,
        masterCallIsDependent:false,
        masterUrl:'',
        masterCallDependentControlValue:[],
    },
    {
        question:'Manufacturing Year',
        label:'Manufacturing Year',
        controlType:'select',
        controlName:'yom',
        isDependent:true,
        hasDependents: true,
        dependentType:['section'],
        sectionDependentConditions:[{sectionIndex:[4],changeType:'visibility',changeDependsOnVal:[]}],
        formDependentConditions:[{}],
        payloadTag:'yom',
        validators:{required:true},
        defaultValue:'',
        key:'quoteInput',
        isFormVisible:false,
        options:[],
        optionDependent:true,
        optionDependentOnControl:'dateOfRegistration',
        optionCondition:{conditionName:"limitValues",limit:'1-years-before'},
        callMaster:false,
        masterCallIsDependent:false,
        masterUrl:'',
    },
  
]
  },
  {
    sectionName:'Vehicle Details',
    sectionIndex:3,
    isSectionVisible:false,
    isSectionDependent:true,
    formData:[
    {
        question:'Select vehicle modal',
        label:'Vehicle Modal',
        controlType:'searchableDropdownFromAPI',
        controlName:'makeAndModel',
        isDependent:false,
        hasDependents:true,
        dependentType:['form'],
        sectionDependentConditions:[{}],
        formDependentConditions:[{formDependentControls:['variantId'],changeType:'visibility',changeDependsOnVal:[]}],
        payloadTag:'makeAndModel',
        validators:{required:true},
        defaultValue:'',
        key:'quoteInput',
        isFormVisible:false,
        options:[],
        searchUrl:'/api/v1/master/findVehicleMakeAndModel',
        fetchCallDependentControlValue:['productType'],
        hasControlReset:true,
        controlToReset:['variantId']
    },
    {
        question:'Select Variant',
        label:'Vehicle Variant',
        controlType:'select',
        controlName:'variantId',
        isDependent:true,
        hasDependents: true,
        dependentType:['form'],
        sectionDependentConditions:[{}],
        formDependentConditions:[{formDependentControls:['fuelType'],changeType:'visibility',changeDependsOnVal:[]}],
        payloadTag:'variantId',
        validators:{required:true},
        defaultValue:'',
        key:'quoteInput',
        isFormVisible:false,
        options:[],
        additionalPayload:[{payloadTag:'variantName',optionValueTag:'value'}],
        callMaster:true,
        masterCallIsDependent:true,
        masterUrl:'/api/v1/master/findVehicleVariant',
        callType:'post',
        masterCallDependentControlValue:['productType','makeAndModel'],
    },
    {
        question:'Fuel Type',
        label:'Fuel Type',
        controlType:'text',
        initiallyDisabled:true,
        controlName:'fuelType',
        isDependent:true,
        hasDependents: true,
        dependentType:['form'],
        sectionDependentConditions:[{}],
        formDependentConditions:[{formDependentControls:['yom'],changeType:'visibility',changeDependsOnVal:[]}],
        payloadTag:'fuelType',
        validators:{required:true},
        defaultValue:true,
        defaultValueDependency:{condition:'selectFromFormOption',control:'variantId',value:'fuel'},
        key:'quoteInput',
        isFormVisible:false,
        options:[],
        callMaster:false,
        masterCallIsDependent:false,
        masterUrl:'',
        masterCallDependentControlValue:[],
    },
    {
        question:'Manufacturing Year',
        label:'Manufacturing Year',
        controlType:'select',
        controlName:'yom',
        isDependent:true,
        hasDependents: false,
        dependentType:[],
        sectionDependentConditions:[{}],
        formDependentConditions:[{}],
        payloadTag:'yom',
        validators:{required:true},
        defaultValue:'',
        key:'quoteInput',
        isFormVisible:false,
        options:[],
        optionDependent:true,
        optionDependentOnControl:'dateOfRegistration',
        optionCondition:{conditionName:"limitValues",limit:'1-years-before'},
        callMaster:false,
        masterCallIsDependent:false,
        masterUrl:'',
    },
  
]
  },
  {
    sectionName:'Policy Information',
    sectionIndex:4,
    isSectionVisible:false,
    isSectionDependent:true,
    formData:[
     {
        question:'What Type of Policy do you want to buy',
        label:'CoverType',
        controlType:'select',
        controlName:'coverType',
        isDependent:false,
        hasDependents:true,
        dependentType:['section'],
        sectionDependentConditions:[{sectionIndex:[5],changeType:'visibility',changeDependsOnVal:['comprehensive','od','tp']}],
        formDependentConditions:[{}],
        payloadTag:'coverType',
        validators:{required:true},
        key:'quoteInput',
        isFormVisible:false,
        options:[],
        callMaster:true,
        masterCallIsDependent:false,
        masterCallDependentControlValue:[],
        masterUrl:'/api/v1/master/getMasters/CoverType',
    },
]
  },
  {
    sectionName:'Previous Policy Details',
    sectionIndex:5,
    isSectionVisible:false,
    isSectionDependent:true,
    formData:[
        {
            question:'Previous policy expired more than 90 days ago?',
            label:'',
            controlType:'radio',
            controlName:'prevPolicy',
            isDependent:false,
            hasDependents:true,
            dependentType:['form'],
            sectionDependentConditions:[{}],
            formDependentConditions:[{formDependentControls:['prevPolicyEndDate','previousPolicyInsurer'],changeType:'visibility',changeDependsOnVal:['No']}],
            payloadTag:'prevPolicy',
            validators:{required:true},
            defaultValue:'',
            key:'quoteInput',
            isFormVisible:false,
            options:[{id:'Yes',value:'Yes'},{id:'No',value:'No'}],
            callMaster:false,
            masterCallIsDependent:false,
            masterUrl:'',
        },
        {
            question:'Previous policy insurer',
            label:'Prev insurer',
            controlType:'searchableDropdown',
            controlName:'previousPolicyInsurer',
            isDependent:true,
            hasDependents:false,
            dependentType:[],
            sectionDependentConditions:[{}],
            formDependentConditions:[{}],
            payloadTag:'previousPolicyInsurer',
            validators:{required:true},
            defaultValue:'',
            key:'quoteInput',
            isFormVisible:false,
            options:[{id:'01',value:'Acko GI'},{id:'02',value:'Bajaj Allianze'}],
            filteredOptions:[],
            callMaster:true,
            masterCallIsDependent:false,
            masterUrl:'/api/v1/master/getMasters/PreviousPolicyInsurer',
        },
        {
            question:'Expiry date',
            label:'Expiry date',
            controlType:'date',
            controlName:'prevPolicyEndDate',
            isDependent:true,
            hasDependents: true,
            initiallyDisabled:false,
            dependentType:['form'],
            sectionDependentConditions:[{}],
            formDependentConditions:[{formDependentControls:['previousPolicyType'],changeType:'visibility',changeDependsOnVal:[]}],
            payloadTag:'prevPolicyEndDate',
            min:'89 days',
            max:'89 days add',
            validators:{required:true},
            defaultValue:'',
            key:'quoteInput',
            isFormVisible:false,
            options:[],
            callMaster:false,
            masterCallIsDependent:false,
            masterUrl:'',
        },
        {
            question:'Previous policy type',
            label:' Policy Type',
            controlType:'select',
            controlName:'previousPolicyType',
            isDependent:true,
            hasDependents:true,
            dependentType:['form'],
            sectionDependentConditions:[{}],
            formDependentConditions:[{formDependentControls:['prevClaim'],changeType:'visibility',changeDependsOnVal:['COMPREHENSIVE','OD','TP']}],
            payloadTag:'previousPolicyType',
            validators:{required:true},
            key:'quoteInput',
            isFormVisible:false,
            options:[ {
                id: "COMP",
                value: "Comprehensive"
            },
            {
                id: "OD",
                value: "Own Damage"
            },
            {
                id: "TP",
                value: "Third Party"
            }],
            callMaster:true,
            masterCallIsDependent:false,
            masterCallDependentControlValue:[],
            masterUrl:'/api/v1/master/getMasters/PreviousPolicyType',
        },
        {
            question:'Made any claims in previous year?',
            label:'claims',
            controlType:'radio',
            controlName:'prevClaim',
            isDependent:true,
            hasDependents:true,
            dependentType:['form'],
            sectionDependentConditions:[{}],
            formDependentConditions:[{formDependentControls:['prevNCB'],changeType:'visibility',changeDependsOnVal:[false]}],
            payloadTag:'prevClaim',
            validators:{required:true},
            defaultValue:'',
            key:'quoteInput',
            isFormVisible:false,
            options:[{id:true,value:'Yes'},{id:false,value:'No'}],
            callMaster:false,
            masterCallIsDependent:false,
            masterUrl:'',
        },
        {
            question:'NCB on previous policy',
            label:'NCB%',
            controlType:'select',
            controlName:'prevNCB',
            isDependent:true,
            hasDependents: false,
            dependentType:['form'],
            sectionDependentConditions:[{}],
            formDependentConditions:[{}],
            payloadTag:'prevNCB',
            validators:{required:true},
            defaultValue:'',
            key:'quoteInput',
            isFormVisible:false,
            options:[   {id: "0",
            value: "0%"
        },
        {
            id: "20",
            value: "20%"
        }],
            callMaster:true,
            masterCallIsDependent:false,
            masterUrl:'/api/v1/master/getMasters/NoClaimBonus',
        },
       
]
  },
]
}


export const quoteResult = {
  quoteId: "6c70309cb53340ff919852a7494bd17f",
  productQuote: [
    {
      productId: "103MO01TW1",
      planId: 1,
      lob: "Motor",
      productType: "TW",
      productName: "RELIANCE TWO WHEELER POLICY",
      planName: "Motor Cycle/Scooter Comprehensive Policy",
      insurerId: 103,
      insurerName: "Reliance General",
      insurerImageUrl: "https://s3.amazonaws.com/lastdecimal.brokeredge.data/ilogo/i103.svg",
      pt: 1,
      ppt: 1,
      payoutPeriod: 0,
      selectedMode: 0,
      sa: 46170,
      totalPremium: 0,
      gst: 0,
      netPremium: 0,
      brochureUrl: "",
      online: false,
      askForFormType: false,
      defaultFormType: "Long",
      quoteResponse: {
        totalPremium: 2493,
        totalOwnDamagePremium: 727,
        totalLiabilityPremium: 1169,
        packagePremium: 2113,
        totalAddonPremium: 217,
        sumAssured: 46170,
        minSumAssured: 41553,
        maxSumAssured: 55404,
        taxName: "CGST",
        rate: "9",
        tax: 380,
        newNcb: "25",
        premiumBreakup: [
          {
            label: "Own Damage (OD) Premium",
            value: 727,
            premiumSubBreakup: [
              {
                label: "Vehicle Inspection Charge",
                value: "0"
              },
              {
                label: "Basic Premium",
                value: "1025.16"
              },
              {
                label: "Electrical Accessories",
                value: "40.0"
              },
              {
                label: "Non Electrical Accessories",
                value: "22.2"
              }
            ]
          },
          {
            label: "Third Party (TP) Premium",
            value: 1169,
            premiumSubBreakup: [
              {
                label: "Legal Liability For Employee",
                value: "60.0"
              },
              {
                label: "Basic Third Party Liability",
                value: "714"
              },
              {
                label: "Compulsory PA Cover For Owner Driver",
                value: "375.0"
              },
              {
                label: "PA For Passengers",
                value: "70.0"
              }
            ]
          },
          {
            label: "Discounts",
            value: -410,
            premiumSubBreakup: [
              {
                label: "Third Party Property Damage",
                value: "-50"
              },
              {
                label: "NCB Discount to OD Premium",
                value: "-242"
              },
              {
                label: "Voluntary Deductible Discount",
                value: "-118"
              }
            ]
          },
          {
            label: "Add Ons",
            value: 217,
            premiumSubBreakup: [
              {
                label: "Zero Depreciation",
                value: "216.77"
              }
            ]
          },
          {
            label: "Premium Excluding GST",
            value: 2113
          },
          {
            label: "GST",
            value: 380
          },
          {
            label: "Final Premium",
            value: 2493
          }
        ],
        supportedAddons: [
          "Legal Liability For Employee",
          "Compulsory PA Cover For Owner Driver",
          "PA For Passengers",
          "Zero Depreciation"
        ],
        discounts: [
          "Third Party Property Damage",
          "NCB Discount to OD Premium",
          "Voluntary Deductible Discount"
        ],
        accessories: [
          "Electrical Accessories",
          "Non Electrical Accessories"
        ]
      },
      par: false
    }
  ],
  maxSumAssured: 55404,
  minSumAssured: 41553,
  quoteInput: {
    customerId: 562,
    lob: "Motor",
    productType: "TW",
    quoteId: "6c70309cb53340ff919852a7494bd17f",
    policyType: "RO",
    coverType: "comprehensive",
    vehRegNo: "MH12HD8205",
    makeId: 0,
    modelId: 0,
    varId: 0,
    rtoCode: "MH12",
    yom: 2024,
    dateOfRegistration: "2024-04-21",
    prevPolicyEndDate: "2024-04-28",
    tenure: 0,
    tpTenure: 0,
    onwershipChange: false,
    makeAndModel: "TVS#Victor",
    fuelType: "Petrol",
    variantId: "1963",
    variantName: "GLX Disc Brake (125 CC)",
    prevClaim: false,
    prevNCB: 20,
    electricalValue: 1000,
    nonElecValue: 1000,
    paOwnerDriver: 1,
    paUnnamedsi: 50000,
    zeroDep: true,
    rsa: true,
    engineProtect: true,
    deductible: 1000,
    consumableCover: true,
    fullInvoiceCover: true,
    tppd: 1,
    llEmployee: 1,
    maxIdv: false,
    minIdv: true
  },
  numQuotesExpected: 1,
  hasOffline: true
}
const payload= {
        lob: "Motor",
        productType: "PC",
        coverType: "COMP",
        policyType: "NB",
        makeId: "1",
        modelId: "1",
        varId: "3",
        rtoCode: "AN02",
        yom: "2024",
        dateOfRegistration: "2024-04-12",
        prevPolicyEndDate: null,
        currNcb: "0",
        currClaim: "N",
        customerId: "573"
}


export const backToQueston = {
    quoteId: "24adfcf40d9b4d38aa68a2baf3db7eca",
    productQuote: [],
    quoteInput: {
        coverType: "comprehensive",
        customerId: "573",
        dateOfRegistration: "2015-11-19",
        fuelType: "Petrol",
        lob: "Motor",
        makeAndModel: "Bajaj#Super",
        minIdv: true,
        newVehicle: "",
        policyType: "RO",
        prevClaim: false,
        previousPolicyInsurer: "BAJAJ",
        prevNCB: "35",
        prevPolicy: "No",
        prevPolicyEndDate: "2024-04-19",
        previousPolicyType: "COMPREHENSIVE",
        productType: "TW",
        regAvail: "Yes",
        rtoCode: "",
        variantId: "4878",
        variantName: "Ordinary (146 CC)",
        vehRegNo: "asd",
        yom: "2015",
    },
    numQuotesExpected: 3,
    hasOffline: true
  }


   // {
        //     question:'What is the vehicle Registration Date',
        //     label:'Registration Date',
        //     controlType:'date',
        //     controlName:'dateOfRegistration',
        //     isDependent:false,
        //     hasDependents: false,
        //     dependentType:[],
        //     sectionDependentConditions:[{}],
        //     formDependentConditions:[{}],
        //     payloadTag:'dateOfRegistration',
        //     validators:{required:true},
        //     defaultValue:'',
        //     key:'quoteInput',
        //     isFormVisible:true,
        //     options:[],
        //     callMaster:false,
        //     masterCallIsDependent:false,
        //     masterUrl:'',
        // },